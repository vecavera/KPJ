%{
#include <iostream>
#include <cstdlib>
#include <string>
#include <map>

using namespace std;

#define YYDEBUG 1

void yyerror (string s){
cerr<<s<<endl;
exit(EXIT_FAILURE);
}

int yylex();
map<string,unsigned> tablica;
map<string,string> tablica1;
int indikator = 0;

%}

%union{
unsigned d;
string* s;
}

%token pocetak_token kraj_token ispisi_token mod_token div_token dodela_token
%token <d> num_token
%token <s> niska_token
%token <s> id_token

%type <d> E

%left '+' '-'
%left '*' div_token mod_token
%%

Program: pocetak_token NizNaredbi kraj_token {exit(EXIT_SUCCESS);}
;

NizNaredbi: NizNaredbi ';' Naredba 
| Naredba
;

Naredba: ispisi_token '(' niska_token ')' {cout<<*$3<<endl;}
| ispisi_token '(' E ')' {cout<<$3<<endl;}
| id_token dodela_token E {tablica[*$1]=$3;}
| id_token dodela_token niska_token {tablica1[*$1]=*$3; indikator=1;}
| ispisi_token '(' id_token ')' {if(indikator==0)cout<<tablica[*$3]<<endl; else cout<<tablica1[*$3]<<endl;}
;

E: E '+' E {$$ = $1 + $3;}
| E '-' E {$$ = $1 - $3;}
| E '*' E {$$ = $1 * $3;}
| E mod_token E {$$ = $1 % $3;}
| E div_token E {$$ = $1 / $3;}
| num_token {$$ = $1;}
; 




%%

int main(){
yydebug=0;
yyparse();
return 0;
}
