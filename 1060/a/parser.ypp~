%{
#include <iostream>
#include <cstdlib>
#include <string>
#include <set>
#include <map>
#include "Set.hpp"

using namespace std;

int yylex();

void yyerror(string s){
cerr<<s<<endl;
exit(EXIT_FAILURE);
}

map<string,Set*> tablica;

%}

%union { double d;
	 string* s;
	 Set* v;	}

%token <d> num_token
%token <s> id_token
%token oddo_token
%token print_token
%type <v> NizBrojeva




%%

Program: Program Naredba
	| Naredba
;

Naredba: id_token '=' '{' NizBrojeva '}' ';' {tablica[*$1]=$4;}
	| id_token '=' num_token oddo_token num_token ';'{tablica[*$1]=new Set(); 
								for(double i=$2; i<=$5; i++)
									tablica[*$1]->insert(i);} 
	| print_token id_token ';' {map<string, Set*>::iterator it= tablica.find(*$2);
						if(it!=tablica.end())
							cout<<*(it->second);		
						else yyerror("Ne postoji takav skup!");}
;

NizBrojeva: NizBrojeva ',' num_token {$$->insert($3);}
	| num_token {Set* novi= new Set(); novi->insert($1); $$=novi;}
;





%%
int main(){
yyparse();
return 0;
}
