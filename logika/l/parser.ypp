%{

#include <iostream>
using namespace std;

#include <string>
#include <cstdlib>
#include <map>
void yyerror(string s){
    cerr<<s<<endl;
    exit(EXIT_FAILURE);
}

int yylex();

    map<string,bool> tablica;

%}

%union{
    string *s;
    bool x;
}

%token i_token ili_token ekv_token sledi_token true_token false_token dodela_token
%token <s> id_token
%type <x> E

%left dodela_token
%left ekv_token 
%left i_token ili_token sledi_token
%nonassoc '!'


%%

Program : Program Naredba '\n' 
| Naredba '\n'
;
Naredba : E {if ($1)
                cout<<"True"<<endl;
            else
                cout<<"False"<<endl;
        }
| Dodela {}
;
E : E i_token E {$$ = $1 && $3;}
| E ili_token E {$$ = $1 || $3;}
| E ekv_token E {if ($1==$3)
                    $$ = true;
                else
                    $$= false;
} 
| E sledi_token E {
    if($1==1 && $3==0)
        $$ = false;
    else
        $$ = true;
}
| '!' E {$$ = !$2;}
| '(' E ')' {$$ = $2;}
| id_token {
    if (tablica.count(*$1)==0)
        yyerror("Ne postoji data promenljiva");
    else
        $$ = tablica[*$1];
}
| true_token {$$ = true;}
| false_token {$$ = false;}
;
Dodela : id_token dodela_token E {
            tablica[*$1] = $3;
}
;


%%


int main () {

    yyparse();
    return 0;
}
